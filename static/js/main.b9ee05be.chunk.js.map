{"version":3,"sources":["Services/CallApis.js","Components/ControlPokes.js","Components/NavBar.js","Components/PokeContent.js","Components/Start.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["GetPokes","a","fetch","method","json","GetAll","ControlPokes","setSlice","Slice","Newitems","ButtonGroup","className","aria-label","Button","onClick","length","alert","variant","PokeNav","HandleFilter","Navbar","style","borderRadius","bg","Nav","Form","inline","FormControl","onChange","e","target","value","type","placeholder","CardPokes","pokes","useState","filter","setFilter","show","setShow","Color","setColor","BgColor","setBgColor","DataPokemonContent","setDatapokemonContent","handleClose","handleShow","element","items","slice","FilterContent","GetDataPokes","GetFilterPokes","namePoke","data","count","Newpokes","i","id","push","Container","map","index","toUpperCase","name","Card","boxShadow","marginTop","height","width","display","margin","Row","Body","Col","Title","Text","number","Img","src","ThumbnailImage","TypesPokemon","TypesColorPokemon","DataPokesContent","pokeContent","ColorTypes","PokemonContent","console","log","Modal","size","aria-labelledby","centered","onHide","animation","Header","closeButton","NewColorTypes","array1","found","find","toLowerCase","indice","indexOf","color","backgroundColor","Control","readOnly","abilities","weight","Footer","weakness","NavBar","Start","setPokes","useEffect","GetPokesFetch","Datapokes","borderTopRightRadius","borderTopLeftRadius","border","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9ee05be.chunk.js","sourcesContent":["const UrlBase='https://gist.githubusercontent.com/yi-jiayu/ea4f0a6c5b9734dd82920cf739b1f707/raw/79dabce87503050d4d64d0332e2076e4d5485171/pokemon.min.json'\r\n\r\nexport const GetPokes=async()=>{\r\n    const GetPokes = await fetch(`${UrlBase}`,{\r\n        method:'GET'\r\n    })\r\n    const GetAll=await GetPokes.json()\r\n    return GetAll\r\n}\r\n\r\nexport default{\r\n    GetPokes\r\n}","import React from 'react';\r\nimport {Button,ButtonGroup} from 'react-bootstrap'\r\n\r\nconst ControlPokes=({setSlice,Slice,Newitems})=>{\r\n    return <ButtonGroup className=' col-auto ' aria-label=\"Basic example\">\r\n                <Button onClick={()=>{(Newitems.length&&(Newitems.length>=5))?setSlice(Slice-10):alert('No hay mas elementos' )}} variant=\"danger\"> \r\n                    <i className='fa fa-plus'></i>\r\n                </Button>\r\n                    <Button variant=\"dark\"> POKEMONS </Button>\r\n                <Button onClick={()=>{(Slice===942)?alert('Todos los datos fueron cargados'):setSlice(Slice+10)}} variant=\"success\">\r\n                    <i className='fa fa-minus'></i>\r\n                </Button>\r\n        </ButtonGroup>\r\n}\r\nexport default ControlPokes","import React from 'react';\r\nimport {Navbar,Nav,Form,FormControl} from 'react-bootstrap'\r\nimport ControlPokes from './ControlPokes'\r\nconst PokeNav=({HandleFilter,setSlice,Slice,Newitems})=>{\r\nreturn <div>\r\n            <br/>\r\n            <Navbar style={{borderRadius:'10px'}} bg=\"dark\" variant=\"dark\">\r\n                <Nav className='mr-auto'>\r\n                    <ControlPokes setSlice={setSlice} Slice={Slice} Newitems={Newitems}/>\r\n                </Nav>\r\n            <Form inline>\r\n                <FormControl onChange={(e)=>HandleFilter(e.target.value,null)} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            </Form>\r\n            </Navbar>\r\n        </div>\r\n}\r\nexport default PokeNav","import React,{useState} from 'react';\r\nimport {Container,Row,Card,Col,Modal,Form} from 'react-bootstrap'\r\nimport NavBar from './NavBar'\r\n\r\nconst CardPokes = ({pokes})=>{\r\nconst [Slice,setSlice]=useState(12);\r\nconst [filter,setFilter]=useState('');\r\nconst [show, setShow] = useState(false);\r\nconst [Color,setColor]=useState(0);\r\nconst [BgColor,setBgColor]=useState('');\r\nconst [weekColor,setWeekColor]=useState('');\r\nconst [DataPokemonContent,setDatapokemonContent]=useState(0);\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = (element) => {\r\n    setShow(true)\r\n    setDatapokemonContent(element)\r\n}\r\n\r\nlet items = pokes;\r\nlet Newitems = items.slice(0,Slice);\r\n\r\nconst HandleFilter=(e)=>{\r\n    setFilter(e)\r\n}\r\n\r\nconst FilterContent=()=>{\r\n    if(filter==''){return <GetDataPokes/>}\r\n    else{return <GetFilterPokes namePoke={filter}/>}\r\n}\r\n\r\nconst GetFilterPokes= ({namePoke})=>{\r\n    let data = items;\r\n    let count=1\r\n    const Newpokes=[]\r\n    for(let i=0;i<=data.length -1;i++){\r\n        if(data[i].id==count){\r\n            if(data[i].id==count++){\r\n                Newpokes.push(data[i])\r\n            }\r\n        }\r\n    } \r\n    return <Container className='m-0 row justify-content-center' >{Newpokes.map((element,index)=>(namePoke.toUpperCase()==element.name.toUpperCase()||namePoke==element.id)?<Card \r\n    onClick={()=>handleShow(element)}\r\n    className='btn col-auto'\r\n    key={index} style={{ \r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius:'25px',\r\n    marginTop:'0px', \r\n    height:\"7rem\", \r\n    width: '18rem',\r\n    display:'inline-block',\r\n    margin:'4px'}}>\r\n            <Row>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card.Title>{element.name}</Card.Title>\r\n                            <Card.Text> # {element.number} </Card.Text>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card.Img style={{ height:\"5rem\", width: '5rem',}} variant=\"top\" src={element.ThumbnailImage} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Row>\r\n        </Card>:''\r\n    )}\r\n    </Container>\r\n}\r\n\r\nconst GetDataPokes=()=>{\r\nlet data = Newitems;\r\nlet count=1;\r\nconst Newpokes=[];\r\n    for(let i=0;i<=data.length -1;i++){\r\n        if(data[i].id==count){\r\n            if(data[i].id==count++){\r\n                Newpokes.push(data[i])\r\n            }\r\n        }\r\n    } \r\nreturn <Container className='m-0 row justify-content-center' >\r\n{Newpokes.map((element,index)=>{\r\n    return<Card onClick={(e)=>handleShow(element)}\r\n    className='btn col-auto'\r\n    key={index} style={{ \r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius:'25px',\r\n    marginTop:'0px', \r\n    height:\"7rem\", \r\n    width: '18rem',\r\n    display:'inline-block',\r\n    margin:'4px'}}>\r\n            <Row>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card.Title>{element.name}</Card.Title>\r\n                            <Card.Text> # {element.number} </Card.Text>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card.Img style={{ height:\"5rem\", width: '5rem'}} variant=\"top\" src={element.ThumbnailImage} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Row>\r\n        </Card>\r\n        })}\r\n    </Container>\r\n}\r\n\r\nconst TypesPokemon =['steel',\t\r\n    'water',\t\r\n    'bug',\t\r\n    'dragon',\t\r\n    'electric',\t\r\n    'ghost',\t\r\n    'fire',\t\r\n    'fairy',\t\r\n    'ice',\t\r\n    'fighting',\t\r\n    'normal',\t\r\n    'grass',\r\n    'psychic',\t\r\n    'rock',\r\n    'dark',\t\r\n    'ground',\t\r\n    'poison',\t\r\n    'flying']\r\n\r\nconst TypesColorPokemon =['#A8A8C0',\t\r\n    '#3899F8',\t\r\n    '#A8B820',\t\r\n    '#7860E0',\t\r\n    '#F8D030',\t\r\n    '#6060B0',\t\r\n    '#F05030',\t\r\n    '#E79FE7',\t\r\n    '#58C8E0',\t\r\n    '#A05038',\t\r\n    '#A8A090',\t\r\n    '#78C850',\r\n    '#F870A0',\t\r\n    '#B8A058',\r\n    '#7A5848',\t\r\n    '#E9D6A4',\t\r\n    '#B058A0',\t\r\n    '#98A8F0']\r\n\r\nconst StyleContentType=(pokeContent,pokeType,ColorTypes)=>{\r\n    pokeType.map((element,index)=>{\r\n        if(pokeContent.type && element ==pokeContent.type[0]){\r\n            setColor(index)\r\n        }\r\n    })\r\n    setBgColor(ColorTypes[Color])\r\n}\r\n\r\nconst DataPokesContent=({PokemonContent})=>{\r\n    console.log(PokemonContent)\r\n    StyleContentType(PokemonContent,TypesPokemon,TypesColorPokemon)\r\n    return <Modal size=\"lg\"\r\n    aria-labelledby=\"contained-modal-title-vcenter\"\r\n    centered show={show} onHide={handleClose} animation={false}>\r\n            <Modal.Header closeButton>\r\n                <h3 className='mr-4'>\r\n                    #{PokemonContent.number}\r\n                </h3>\r\n                <h3 className='mr-4'>\r\n                    {PokemonContent.name}\r\n                </h3>\r\n                <h6>\r\n                    <Container className='text-center mb-2'>\r\n                        Tipo\r\n                    </Container>\r\n                        <Row >{\r\n                            PokemonContent.type.map((element)=>{\r\n                            let NewColorTypes=[]\r\n                            const array1 = TypesPokemon;\r\n                            const found = array1.find((type)=> type == element.toLowerCase());\r\n                            const indice = array1.indexOf(found);\r\n                            NewColorTypes.push(TypesColorPokemon[indice])\r\n                            return <div className='col-auto text-center' >\r\n                                    <p>\r\n                                        {NewColorTypes.map((color)=><p \r\n                                        className='col-auto text-center' style={{\r\n                                        boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n                                        borderRadius:'25px',\r\n                                        height:\"2rem\", \r\n                                        backgroundColor:`${color}`}} >{element}\r\n                                        </p>)}\r\n                                    </p>\r\n                                </div>\r\n                            })}\r\n                        </Row>\r\n                </h6>\r\n            </Modal.Header>\r\n                <Modal.Body style={{backgroundColor:`${BgColor}`}} >\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='col-auto' >\r\n                            <Card.Img style={{borderRadius:'100px',backgroundColor:'white', height:\"9rem\", width: '9rem'}} variant=\"top\" src={PokemonContent.ThumbnailImage} />\r\n                        </Col>\r\n                            <Col className='col-auto' >\r\n                            <p>ESPECIAL:</p>\r\n                            <p>ALTURA:</p>\r\n                            <p>PESO:</p> \r\n                        </Col>\r\n                        <Col className='col-auto' >\r\n                            <Form.Control readOnly value={PokemonContent.abilities}/>\r\n                            <Form.Control readOnly value={PokemonContent.height}/>\r\n                            <Form.Control readOnly value={PokemonContent.weight}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n            <Modal.Footer className='justify-content-center'>\r\n                <Container className='text-center'>\r\n                    <h3>DEBILIDAD</h3>\r\n                </Container>\r\n                    <Row >{\r\n                        PokemonContent.weakness.map((element)=>{\r\n                            let NewColorTypes=[]\r\n                            const array1 = TypesPokemon;\r\n                            const found = array1.find((type)=> type == element.toLowerCase());\r\n                            const indice = array1.indexOf(found);\r\n                            NewColorTypes.push(TypesColorPokemon[indice])\r\n                            return <div className='col-auto text-center' >\r\n                            <p>\r\n                                {NewColorTypes.map((color)=><p className='col-auto text-center' style={{\r\n                                    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n                                    borderRadius:'25px',\r\n                                    height:\"2rem\", \r\n                                    backgroundColor:`${color}`}} >{element}</p>)}\r\n                            </p>\r\n                            </div>\r\n                        })}\r\n                    </Row>\r\n            </Modal.Footer>\r\n        </Modal>\r\n}\r\n\r\nconsole.log(Newitems)\r\n    return <Container className='m-0 row justify-content-center' >\r\n    <NavBar HandleFilter={HandleFilter} setSlice={setSlice} Slice={Slice} Newitems={Newitems}/>\r\n         {(DataPokemonContent==0)?'':<DataPokesContent PokemonContent={DataPokemonContent}/> }\r\n            <Row>\r\n                <br/>\r\n            </Row>\r\n        <FilterContent/>\r\n    </Container>\r\n}\r\n\r\nexport default CardPokes \r\n","import React,{useEffect, useState} from 'react';\r\nimport {Container} from 'react-bootstrap'\r\nimport {GetPokes} from '../Services/CallApis'\r\nimport CardPokes from './PokeContent'\r\nconst Start=()=>{\r\n    const [pokes,setPokes]=useState([])\r\n\r\nuseEffect(()=>{\r\n    GetPokesFetch()\r\n},[])\r\n\r\nconst GetPokesFetch =async()=>{\r\n    let Datapokes= await GetPokes()\r\n    setPokes(Datapokes)\r\n}\r\n    return <Container>\r\n                <CardPokes pokes={pokes}/>\r\n            </Container>\r\n}\r\n\r\nexport default Start","import React from 'react'\r\nimport { Container} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst Header = () =>\r\n{\r\n    return(\r\n        <Container >\r\n            <Container style={{borderTopRightRadius:' 25px',borderTopLeftRadius:' 25px', border:' 2px solid red'}} className='bg bg-danger'>\r\n                <h1 className='text-white text-center' >POKEDEX</h1>\r\n            </Container>\r\n            <Container style={{marginBottom :'0%'}} className='bg bg-dark'>\r\n                <p className='text-white text-center' style={{marginTop :'0%',marginBottom :'0%'}}>O</p>\r\n            </Container>\r\n            <Container style={{ marginTop :'0%', borderBottomRightRadius:' 25px',borderBottomLeftRadius:' 25px', border:' 2px solid black'}} >\r\n                <h1 className='text-center' >WUUX</h1>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header;","\nimport {Container,Row,Col} from 'react-bootstrap'\nimport Start from './Components/Start'\nimport Header from './Components/Header'\nconst App =()=> {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col>\n            <Header/>\n          </Col>\n        </Row>\n\n              \n\n        <Row>\n            <Start/>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\n    <App />\n\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}